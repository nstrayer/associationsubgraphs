% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/subgraphs_functions.R
\name{find_all_subgraphs}
\alias{find_all_subgraphs}
\title{Find all subgraphs in pairs for every subset of edges}
\usage{
find_all_subgraphs(association_pairs)
}
\arguments{
\item{association_pairs}{dataframe with columns \code{a} and \code{b} representing the
ids of the variables or nodes and columns \code{strength} that is a numeric
indicator of strength of association (higher = stronger).}
}
\value{
Dataframe with the following columns for each unique subgraph state.
\describe{
\item{cutoff}{The lowest of the edge(s) added to achieve network state}
\item{subgraphs}{List column of dataframes that contains each node residing in a subgraph at this state and that subgraphs id.}
\item{step}{Integer step, aka the number of unique edge strengths in network at state}
\item{largest_size}{Size in number of nodes of the largest current subgraph}
\item{smallest_size}{Size of the smallest current subgraph}
\item{avg_size}{Average size of subgraphs}
\item{n}{Total number of subgraphs}
\item{n_mergers}{Number of subgraphs with more than two nodes that were merged in the last step}
\item{total_merger_magnitude}{Sum of sizes of all merged subgraphs}
}
}
\description{
Given a dataframe of edges with strength between nodes this function returns
info on every subgraph state achieved by adding nodes in one-at-a-time in
descending order of strength.
}
\examples{
virus_net \%>\%
  dplyr::arrange(dplyr::desc(strength)) \%>\%
    head(1000) \%>\%
    find_all_subgraphs()

}
