% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/RcppExports.R
\name{calculate_subgraph_structure_rcpp}
\alias{calculate_subgraph_structure_rcpp}
\title{Find all subgraphs in pairs for every subset of edges (c++ version)}
\usage{
calculate_subgraph_structure_rcpp(
  associations,
  a_col = "a",
  b_col = "b",
  w_col = "w",
  return_subgraph_membership = FALSE
)
}
\arguments{
\item{associations}{Dataframe of association between two ids with a strength}

\item{a_col, b_col}{Names of columns that store the id's for the association pair}

\item{w_col}{Name of the column storing the strength of association}

\item{return_subgraph_membership}{Should an integer matrix of the subgraph
membership for all nodes at all step be returned? This can be useful for
comparing consistency of structure across different networks etc. but
comes at the cost of speed and memory usage. This will also cause the
algorithm to terminate after all nodes are merged into a giant component.
This is to avoid execcessive memory usage.}
}
\description{
Given a dataframe of edges with strength between nodes this function returns
info on every subgraph state achieved by adding nodes in one-at-a-time in
descending order of strength.
}
